(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{201:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return l}));var n=a(5),p=a(10),i=(a(2),a(345)),r={id:"typescript-compatibility",title:"TypeScript 1.0 Compatibility"},c={unversionedId:"plugins/typescript-compatibility",id:"plugins/typescript-compatibility",isDocsHomePage:!1,title:"TypeScript 1.0 Compatibility",description:"{@import ../generated-config/typescript-compatibility.md}",source:"@site/docs/plugins/typescript-compatibility.md",slug:"/plugins/typescript-compatibility",permalink:"/docs/plugins/typescript-compatibility",editUrl:"https://github.com/dotansimha/graphql-code-generator/edit/master/website/docs/plugins/typescript-compatibility.md",version:"current",sidebar:"sidebar",previous:{title:"TypeScript Stencil Apollo",permalink:"/docs/plugins/typescript-stencil-apollo"},next:{title:"TypeScript GraphQL Files Modules",permalink:"/docs/plugins/typescript-graphql-files-modules"}},o=[],b={toc:o};function l(e){var t=e.components,a=Object(p.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("p",{parentName:"p"},"If you are migrating from <1.0, we created a new plugin called ",Object(i.b)("inlineCode",{parentName:"p"},"typescript-compatibility")," that generates backward compatibility for the ",Object(i.b)("inlineCode",{parentName:"p"},"typescript-operations")," and ",Object(i.b)("inlineCode",{parentName:"p"},"typescript-react-apollo")," plugins."),Object(i.b)("p",{parentName:"p"},"It generates types that are pointing to the new form of types. It supports ",Object(i.b)("em",{parentName:"p"},"most")," of the use-cases."),Object(i.b)("h2",{parentName:"p"},"Installation"),Object(i.b)("img",{alt:"typescript-compatibility plugin version",src:"https://img.shields.io/npm/v/@graphql-codegen/typescript-compatibility?color=%23e15799&label=plugin\xa0version&style=for-the-badge"}),Object(i.b)("div",Object(n.a)({parentName:"p"},{className:"admonition admonition-shell"}),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16pt",height:"16pt",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{d:"M0 0v16h16V0zm15.063 15.063H.937v-11h14.126zm0-11.938H.937V.937h14.126zm0 0"})),Object(i.b)("path",Object(n.a)({parentName:"svg"},{d:"M1.875 1.563h.938V2.5h-.938zm0 0M3.438 1.563h.937V2.5h-.938zm0 0M5 1.563h.938V2.5H5zm0 0M1.875 5.074v1.348l.988.637-.988.578V9.05l2.828-1.668v-.586zm0 0M5.34 7.559h1.027v1.226H5.34zm0 0M5.34 5.32h1.027v1.23H5.34zm0 0M6.8 8.785h2.356v1.137H6.801zm0 0"})))),"Using ",Object(i.b)("inlineCode",{parentName:"h5"},"yarn"))),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"yarn add -D @graphql-codegen/typescript-compatibility\n")))),Object(i.b)("h2",{parentName:"p"},"API Reference"),Object(i.b)("h3",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"h3"},"noNamespaces")),Object(i.b)("p",{parentName:"p"},"type: ",Object(i.b)("inlineCode",{parentName:"p"},"boolean"),"\ndefault: ",Object(i.b)("inlineCode",{parentName:"p"},"false")),Object(i.b)("p",{parentName:"p"},"Does not generate TypeScript ",Object(i.b)("inlineCode",{parentName:"p"},"namespace"),"s and uses the operation name as prefix."),Object(i.b)("h4",{parentName:"p"},"Usage Examples"),Object(i.b)("pre",{parentName:"p"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yml"}),"generates:\npath/to/file.ts:\n plugins:\n   - typescript\n   - typescript-operations\n   - typescript-compatibility\n config:\n   noNamespaces: true\n")),Object(i.b)("h3",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"h3"},"strict")),Object(i.b)("p",{parentName:"p"},"type: ",Object(i.b)("inlineCode",{parentName:"p"},"boolean"),"\ndefault: ",Object(i.b)("inlineCode",{parentName:"p"},"false")),Object(i.b)("p",{parentName:"p"},"Make sure to generate code that compatible with TypeScript strict mode."),Object(i.b)("h4",{parentName:"p"},"Usage Examples"),Object(i.b)("pre",{parentName:"p"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yml"}),"generates:\npath/to/file.ts:\n plugins:\n   - typescript\n   - typescript-operations\n   - typescript-compatibility\n config:\n   strict: true\n")),Object(i.b)("h3",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"h3"},"preResolveTypes")),Object(i.b)("p",{parentName:"p"},"type: ",Object(i.b)("inlineCode",{parentName:"p"},"boolean"),"\ndefault: ",Object(i.b)("inlineCode",{parentName:"p"},"false")),Object(i.b)("p",{parentName:"p"},"Avoid using ",Object(i.b)("inlineCode",{parentName:"p"},"Pick")," in ",Object(i.b)("inlineCode",{parentName:"p"},"typescript-operations")," and make sure to optimize this package as well."),Object(i.b)("h3",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"h3"},"scalars")),Object(i.b)("p",{parentName:"p"},"type: ",Object(i.b)("inlineCode",{parentName:"p"},"ScalarsMap")),Object(i.b)("p",{parentName:"p"},"Extends or overrides the built-in scalars and custom GraphQL scalars to a custom type."),Object(i.b)("h3",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"h3"},"namingConvention")),Object(i.b)("p",{parentName:"p"},"type: ",Object(i.b)("inlineCode",{parentName:"p"},"NamingConvention"),"\ndefault: ",Object(i.b)("inlineCode",{parentName:"p"},"change-case-all#pascalCase")),Object(i.b)("p",{parentName:"p"},"Allow you to override the naming convention of the output.\nYou can either override all namings, or specify an object with specific custom naming convention per output.\nThe format of the converter must be a valid ",Object(i.b)("inlineCode",{parentName:"p"},"module#method"),".\nAllowed values for specific output are: ",Object(i.b)("inlineCode",{parentName:"p"},"typeNames"),", ",Object(i.b)("inlineCode",{parentName:"p"},"enumValues"),'.\nYou can also use "keep" to keep all GraphQL names as-is.\nAdditionally you can set ',Object(i.b)("inlineCode",{parentName:"p"},"transformUnderscore")," to ",Object(i.b)("inlineCode",{parentName:"p"},"true")," if you want to override the default behavior,\nwhich is to preserves underscores."),Object(i.b)("p",{parentName:"p"},"Available case functions in ",Object(i.b)("inlineCode",{parentName:"p"},"change-case-all")," are ",Object(i.b)("inlineCode",{parentName:"p"},"camelCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"capitalCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"constantCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"dotCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"headerCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"noCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"paramCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"pascalCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"pathCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"sentenceCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"snakeCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"lowerCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"localeLowerCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"lowerCaseFirst"),", ",Object(i.b)("inlineCode",{parentName:"p"},"spongeCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"titleCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"upperCase"),", ",Object(i.b)("inlineCode",{parentName:"p"},"localeUpperCase")," and ",Object(i.b)("inlineCode",{parentName:"p"},"upperCaseFirst"),"\n",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/btxtiger/change-case-all"}),"See more")),Object(i.b)("h3",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"h3"},"typesPrefix")),Object(i.b)("p",{parentName:"p"},"type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),"\ndefault: ``"),Object(i.b)("p",{parentName:"p"},"Prefixes all the generated types."),Object(i.b)("h4",{parentName:"p"},"Usage Examples"),Object(i.b)("pre",{parentName:"p"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  typesPrefix: I\n")),Object(i.b)("h3",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"h3"},"typesSuffix")),Object(i.b)("p",{parentName:"p"},"type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),"\ndefault: ``"),Object(i.b)("p",{parentName:"p"},"Suffixes all the generated types."),Object(i.b)("h4",{parentName:"p"},"Usage Examples"),Object(i.b)("pre",{parentName:"p"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  typesSuffix: I\n")),Object(i.b)("h3",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"h3"},"skipTypename")),Object(i.b)("p",{parentName:"p"},"type: ",Object(i.b)("inlineCode",{parentName:"p"},"boolean"),"\ndefault: ",Object(i.b)("inlineCode",{parentName:"p"},"false")),Object(i.b)("p",{parentName:"p"},"Does not add __typename to the generated types, unless it was specified in the selection set."),Object(i.b)("h4",{parentName:"p"},"Usage Examples"),Object(i.b)("pre",{parentName:"p"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  skipTypename: true\n")),Object(i.b)("h3",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"h3"},"nonOptionalTypename")),Object(i.b)("p",{parentName:"p"},"type: ",Object(i.b)("inlineCode",{parentName:"p"},"boolean"),"\ndefault: ",Object(i.b)("inlineCode",{parentName:"p"},"false")),Object(i.b)("p",{parentName:"p"},"Automatically adds ",Object(i.b)("inlineCode",{parentName:"p"},"__typename")," field to the generated types, even when they are not specified\nin the selection set, and makes it non-optional"),Object(i.b)("h4",{parentName:"p"},"Usage Examples"),Object(i.b)("pre",{parentName:"p"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yml"}),"config:\n  nonOptionalTypename: true\n")),Object(i.b)("h3",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"h3"},"useTypeImports")),Object(i.b)("p",{parentName:"p"},"type: ",Object(i.b)("inlineCode",{parentName:"p"},"boolean"),"\ndefault: ",Object(i.b)("inlineCode",{parentName:"p"},"false")),Object(i.b)("p",{parentName:"p"},"Will use ",Object(i.b)("inlineCode",{parentName:"p"},"import type {}")," rather than ",Object(i.b)("inlineCode",{parentName:"p"},"import {}"),' when importing only types. This gives\ncompatibility with TypeScript\'s "importsNotUsedAsValues": "error" option')))}l.isMDXComponent=!0},345:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return O}));var n=a(2),p=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,p=function(e,t){if(null==e)return{};var a,n,p={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(p[a]=e[a]);return p}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(p[a]=e[a])}return p}var b=p.a.createContext({}),l=function(e){var t=p.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=l(e.components);return p.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return p.a.createElement(p.a.Fragment,{},t)}},d=p.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),s=l(a),d=n,O=s["".concat(r,".").concat(d)]||s[d]||m[d]||i;return a?p.a.createElement(O,c(c({ref:t},b),{},{components:a})):p.a.createElement(O,c({ref:t},b))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,r[1]=c;for(var b=2;b<i;b++)r[b]=a[b];return p.a.createElement.apply(null,r)}return p.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);